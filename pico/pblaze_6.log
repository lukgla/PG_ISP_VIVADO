KCPSM6 Assembler log file for program 'C:\Users\lukgla\Desktop\Vivado\pico\pblaze_6.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 09 Apr 2024
Assembly timestamp: 01:10:32

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 0B9 hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 186
Memory locations available: 3910


Assembly listing

 Addr Code                             Instruction

 000                                   ;
 000                                   ; PiÄty program na Picoblaze
 000                                   ;
 000                                   TABLE 7_segment_decode#, [3F,06,5B,4F,66,6D,7D,07,7F,67,77,7C,39,5E,79,71,FF]
 000                                   CONSTANT 7seg_el1_port, 00000001'b
 000                                   CONSTANT 7seg_el2_port, 00000010'b
 000                                   CONSTANT 7seg_el3_port, 00000100'b
 000                                   CONSTANT 7seg_el4_port, 00001000'b
 000                                   CONSTANT state_is_editing, 10000000'b
 000                                   ; -- port is equal to which one is edited right now
 000                                   CONSTANT button_up, 00000010'b
 000                                   CONSTANT button_down, 00000001'b
 000                                   CONSTANT button_edit, 00001000'b
 000                                   CONSTANT button_left, 00001000'b
 000                                   CONSTANT button_right, 00000100'b
 000                                   NAMEREG sE, buttons
 000                                   NAMEREG sF, buttons_old
 000                                   NAMEREG sC, state
 000                                   ; -- internal representation of the number
 000                                   NAMEREG sA, port1
 000                                   NAMEREG sB, port2
 000                                   NAMEREG s9, port3
 000                                   NAMEREG s8, port4
 000                                   NAMEREG s7, selected_number
 000                                   NAMEREG s6, digit_number_7seg
 000                                   NAMEREG s5, button_dif
 000                                   NAMEREG s4, button_up_counter
 000                                   NAMEREG s3, blink_counter
 000  01C01                            LOAD sC[state], 01[7seg_el1_port]
 001                            reset: 
 001                                   ; reset digit to 0000
 001  01700                            LOAD s7[selected_number], 00
 002  2009D                            CALL 09D[get_digit]                                         ; load 0
 003  2D60F                            OUTPUT s6[digit_number_7seg], 0F[00001111'b]
 004                        loop_main: 
 004  00FE0                            LOAD sF[buttons_old], sE[buttons]
 005  010FF                            LOAD s0, FF
 006  200B7                            CALL 0B7[delay]
 007  010FF                            LOAD s0, FF
 008  200B7                            CALL 0B7[delay]
 009                                   ; blink
 009  2008A                            CALL 08A[blink_selected]
 00A                                   ; up clock if not zero with bound check
 00A  1D400                            COMPARE s4[button_up_counter], 00
 00B  3200F                            JUMP Z, 00F[scan_buttons]
 00C  1D4FF                            COMPARE s4[button_up_counter], FF
 00D  3200F                            JUMP Z, 00F[scan_buttons]
 00E  11401                            ADD s4[button_up_counter], 01
 00F                     scan_buttons: 
 00F  09E00                            INPUT sE[buttons], 00                                       ; read buttons
 010  005E0                            LOAD s5[button_dif], sE[buttons]
 011  065F0                            XOR s5[button_dif], sF[buttons_old]
 012  32004                            JUMP Z, 004[loop_main]
 013             handle_button_change: 
 013  0DC80                            TEST sC[state], 80[state_is_editing]
 014  32021                            JUMP Z, 021[handle_button_up]
 015                      handle_left: 
 015  01108                            LOAD s1, 08[button_left]
 016  20095                            CALL 095[has_button_changed]
 017  3201B                            JUMP Z, 01B[handle_right]
 018  20097                            CALL 097[is_button_presed]
 019  3201B                            JUMP Z, 01B[handle_right]
 01A  2007F                            CALL 07F[left_shift]
 01B                     handle_right: 
 01B  01104                            LOAD s1, 04[button_right]
 01C  20095                            CALL 095[has_button_changed]
 01D  32021                            JUMP Z, 021[handle_button_up]
 01E  20097                            CALL 097[is_button_presed]
 01F  32021                            JUMP Z, 021[handle_button_up]
 020  20085                            CALL 085[right_shift]
 021                 handle_button_up: 
 021  01102                            LOAD s1, 02[button_up]
 022  20095                            CALL 095[has_button_changed]
 023  32035                            JUMP Z, 035[handle_button_down]
 024  20097                            CALL 097[is_button_presed]
 025  3A029                            JUMP C, 029[handle_button_up_pressed]
 026  20099                            CALL 099[is_button_released]
 027  3A02B                            JUMP C, 02B[up_released]
 028  22035                            JUMP 035[handle_button_down]
 029         handle_button_up_pressed: 
 029  01401                            LOAD s4[button_up_counter], 01
 02A  22035                            JUMP 035[handle_button_down]
 02B                      up_released: 
 02B  1D4FF                            COMPARE s4[button_up_counter], FF
 02C  36032                            JUMP NZ, 032[up_short]
 02D                          up_long: 
 02D  07C80                            XOR sC[state], 80[state_is_editing]
 02E  01400                            LOAD s4[button_up_counter], 00
 02F  000C0                            LOAD s0, sC[state]
 030  20043                            CALL 043[update_pos]                                        ; reset to number blinking
 031  22035                            JUMP 035[handle_button_down]
 032                         up_short: 
 032  2005B                            CALL 05B[inc_selected]
 033  01400                            LOAD s4[button_up_counter], 00
 034  22035                            JUMP 035[handle_button_down]
 035               handle_button_down: 
 035  0DC80                            TEST sC[state], 80[state_is_editing]
 036  3A004                            JUMP C, 004[loop_main]
 037  01101                            LOAD s1, 01[button_down]
 038  20095                            CALL 095[has_button_changed]
 039  32004                            JUMP Z, 004[loop_main]
 03A  20097                            CALL 097[is_button_presed]
 03B  3A03F                            JUMP C, 03F[down_pressed]
 03C  20099                            CALL 099[is_button_released]
 03D  3A041                            JUMP C, 041[down_released]
 03E  22004                            JUMP 004[loop_main]
 03F                     down_pressed: 
 03F  2006D                            CALL 06D[dec_selected]
 040  22035                            JUMP 035[handle_button_down]
 041                    down_released: 
 041  22035                            JUMP 035[handle_button_down]
 042  22004                            JUMP 004[loop_main]
 043                       update_pos: 
 043                     update_pos_1: 
 043  0D001                            TEST s0, 01
 044  32049                            JUMP Z, 049[update_pos_2]
 045  007A0                            LOAD s7[selected_number], sA[port1]
 046  2009D                            CALL 09D[get_digit]
 047  2D601                            OUTPUT s6[digit_number_7seg], 01[7seg_el1_port]
 048  2205A                            JUMP 05A[update_end]
 049                     update_pos_2: 
 049  0D002                            TEST s0, 02
 04A  3204F                            JUMP Z, 04F[update_pos_3]
 04B  007B0                            LOAD s7[selected_number], sB[port2]
 04C  2009D                            CALL 09D[get_digit]
 04D  2D602                            OUTPUT s6[digit_number_7seg], 02[7seg_el2_port]
 04E  2205A                            JUMP 05A[update_end]
 04F                     update_pos_3: 
 04F  0D004                            TEST s0, 04
 050  32055                            JUMP Z, 055[update_pos_4]
 051  00790                            LOAD s7[selected_number], s9[port3]
 052  2009D                            CALL 09D[get_digit]
 053  2D604                            OUTPUT s6[digit_number_7seg], 04[7seg_el3_port]
 054  2205A                            JUMP 05A[update_end]
 055                     update_pos_4: 
 055  0D008                            TEST s0, 08
 056  3205A                            JUMP Z, 05A[update_end]
 057  00780                            LOAD s7[selected_number], s8[port4]
 058  2009D                            CALL 09D[get_digit]
 059  2D608                            OUTPUT s6[digit_number_7seg], 08[7seg_el4_port]
 05A                       update_end: 
 05A  25000                            RETURN 
 05B                     inc_selected: 
 05B                   inc_selected_1: 
 05B  0DC01                            TEST sC[state], 01[7seg_el1_port]
 05C  3205F                            JUMP Z, 05F[inc_selected_2]
 05D  11A01                            ADD sA[port1], 01
 05E  03A0F                            AND sA[port1], 0F
 05F                   inc_selected_2: 
 05F  0DC02                            TEST sC[state], 02[7seg_el2_port]
 060  32063                            JUMP Z, 063[inc_selected_3]
 061  11B01                            ADD sB[port2], 01
 062  03B0F                            AND sB[port2], 0F
 063                   inc_selected_3: 
 063  0DC04                            TEST sC[state], 04[7seg_el3_port]
 064  32067                            JUMP Z, 067[inc_selected_4]
 065  11901                            ADD s9[port3], 01
 066  0390F                            AND s9[port3], 0F
 067                   inc_selected_4: 
 067  0DC08                            TEST sC[state], 08[7seg_el4_port]
 068  11801                            ADD s8[port4], 01
 069  0380F                            AND s8[port4], 0F
 06A                          inc_end: 
 06A  000C0                            LOAD s0, sC[state]
 06B  20043                            CALL 043[update_pos]
 06C  25000                            RETURN 
 06D                     dec_selected: 
 06D                   dec_selected_1: 
 06D  0DC01                            TEST sC[state], 01[7seg_el1_port]
 06E  32071                            JUMP Z, 071[dec_selected_2]
 06F  19A01                            SUB sA[port1], 01
 070  03A0F                            AND sA[port1], 0F
 071                   dec_selected_2: 
 071  0DC02                            TEST sC[state], 02[7seg_el2_port]
 072  32075                            JUMP Z, 075[dec_selected_3]
 073  19B01                            SUB sB[port2], 01
 074  03B0F                            AND sB[port2], 0F
 075                   dec_selected_3: 
 075  0DC04                            TEST sC[state], 04[7seg_el3_port]
 076  32079                            JUMP Z, 079[dec_selected_4]
 077  19901                            SUB s9[port3], 01
 078  0390F                            AND s9[port3], 0F
 079                   dec_selected_4: 
 079  0DC08                            TEST sC[state], 08[7seg_el4_port]
 07A  19801                            SUB s8[port4], 01
 07B  0380F                            AND s8[port4], 0F
 07C                          dec_end: 
 07C  000C0                            LOAD s0, sC[state]
 07D  20043                            CALL 043[update_pos]
 07E  25000                            RETURN 
 07F                       left_shift: 
 07F  14C06                            SL0 sC[state]
 080  0DC10                            TEST sC[state], 10[00010000'b]
 081  32083                            JUMP Z, 083[left_shift_end]
 082  01C01                            LOAD sC[state], 01[7seg_el1_port]
 083                   left_shift_end: 
 083  05C80                            OR sC[state], 80[state_is_editing]
 084  25000                            RETURN 
 085                      right_shift: 
 085  14C0E                            SR0 sC[state]
 086  3E088                            JUMP NC, 088[right_shift_end]
 087  05C08                            OR sC[state], 08[7seg_el4_port]
 088                  right_shift_end: 
 088  07CC0                            XOR sC[state], C0[11000000'b]
 089  25000                            RETURN 
 08A                   blink_selected: 
 08A  0DC80                            TEST sC[state], 80[state_is_editing]
 08B  3A08D                            JUMP C, 08D[blink_on]
 08C  25000                            RETURN 
 08D                         blink_on: 
 08D  11301                            ADD s3[blink_counter], 01
 08E  0D380                            TEST s3[blink_counter], 80
 08F  3A091                            JUMP C, 091[blink_end]
 090  01201                            LOAD s2, 01
 091                        blink_end: 
 091  000C0                            LOAD s0, sC[state]
 092  20043                            CALL 043[update_pos]
 093  01200                            LOAD s2, 00
 094  25000                            RETURN 
 095               has_button_changed: 
 095  0C510                            TEST s5[button_dif], s1
 096  25000                            RETURN 
 097                 is_button_presed: 
 097  0CE10                            TEST sE[buttons], s1
 098  25000                            RETURN 
 099               is_button_released: 
 099  0CF10                            TEST sF[buttons_old], s1
 09A  25000                            RETURN 
 09B                        test_edit: 
 09B  0DE08                            TEST sE[buttons], 08[00001000'b]                            ;
 09C  25000                            RETURN 
 09D                        get_digit: 
 09D  01000                            LOAD s0, 00[tablica'upper]
 09E  011A6                            LOAD s1, A6[tablica'lower]
 09F  1D200                            COMPARE s2, 00
 0A0  320A2                            JUMP Z, 0A2[get_digit_next]
 0A1                  get_digit_blink: 
 0A1  01710                            LOAD s7[selected_number], 10
 0A2                   get_digit_next: 
 0A2  10170                            ADD s1, s7[selected_number]
 0A3  13000                            ADDCY s0, 00
 0A4  24010                            CALL@ (s0, s1)
 0A5  25000                            RETURN 
 0A6                          tablica: 
 0A6  2163F                            LOAD&RETURN s6[digit_number_7seg], 3F[7_segment_decode#:3F]
 0A7  21606                            LOAD&RETURN s6[digit_number_7seg], 06[7_segment_decode#:06]
 0A8  2165B                            LOAD&RETURN s6[digit_number_7seg], 5B[7_segment_decode#:5B]
 0A9  2164F                            LOAD&RETURN s6[digit_number_7seg], 4F[7_segment_decode#:4F]
 0AA  21666                            LOAD&RETURN s6[digit_number_7seg], 66[7_segment_decode#:66]
 0AB  2166D                            LOAD&RETURN s6[digit_number_7seg], 6D[7_segment_decode#:6D]
 0AC  2167D                            LOAD&RETURN s6[digit_number_7seg], 7D[7_segment_decode#:7D]
 0AD  21607                            LOAD&RETURN s6[digit_number_7seg], 07[7_segment_decode#:07]
 0AE  2167F                            LOAD&RETURN s6[digit_number_7seg], 7F[7_segment_decode#:7F]
 0AF  21667                            LOAD&RETURN s6[digit_number_7seg], 67[7_segment_decode#:67]
 0B0  21677                            LOAD&RETURN s6[digit_number_7seg], 77[7_segment_decode#:77]
 0B1  2167C                            LOAD&RETURN s6[digit_number_7seg], 7C[7_segment_decode#:7C]
 0B2  21639                            LOAD&RETURN s6[digit_number_7seg], 39[7_segment_decode#:39]
 0B3  2165E                            LOAD&RETURN s6[digit_number_7seg], 5E[7_segment_decode#:5E]
 0B4  21679                            LOAD&RETURN s6[digit_number_7seg], 79[7_segment_decode#:79]
 0B5  21671                            LOAD&RETURN s6[digit_number_7seg], 71[7_segment_decode#:71]
 0B6  216FF                            LOAD&RETURN s6[digit_number_7seg], FF[7_segment_decode#:FF]
 0B7                                   ;// ; procedura opĂłĹşniajÄca (opĂłĹşnienie w s4)
 0B7                            delay: 
 0B7  19001                            SUB s0, 01
 0B8  360B7                            JUMP NZ, 0B7[delay]
 0B9  25000                            RETURN 


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\lukgla\Desktop\Vivado\pico\pblaze_6.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   01'd         
 timestamp_minutes 10'd         
 timestamp_seconds 32'd         
 datestamp_year    24'd         
 datestamp_month   4'd          
 datestamp_day     09'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 7seg_el1_port     00000001'b   pblaze_6.psm
 7seg_el2_port     00000010'b   pblaze_6.psm
 7seg_el3_port     00000100'b   pblaze_6.psm
 7seg_el4_port     00001000'b   pblaze_6.psm
 state_is_editing  10000000'b   pblaze_6.psm
 button_up         00000010'b   pblaze_6.psm
 button_down       00000001'b   pblaze_6.psm
 button_edit       00001000'b   pblaze_6.psm
 button_left       00001000'b   pblaze_6.psm
 button_right      00000100'b   pblaze_6.psm



List of defined tables

 TABLE name          Table                                                 Source PSM File

 7_segment_decode#   [3F,06,5B,4F,66,6D,7D,07,7F,67,77,7C,39,5E,79,71,FF]  pblaze_6.psm



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "09 Apr 2024"  
 timestamp$        "01:10:32"     



List of line labels

   Label                      Addr  Source PSM File

 * reset                      001   pblaze_6.psm
   loop_main                  004   pblaze_6.psm
   scan_buttons               00F   pblaze_6.psm
 * handle_button_change       013   pblaze_6.psm
 * handle_left                015   pblaze_6.psm
   handle_right               01B   pblaze_6.psm
   handle_button_up           021   pblaze_6.psm
   handle_button_up_pressed   029   pblaze_6.psm
   up_released                02B   pblaze_6.psm
 * up_long                    02D   pblaze_6.psm
   up_short                   032   pblaze_6.psm
   handle_button_down         035   pblaze_6.psm
   down_pressed               03F   pblaze_6.psm
   down_released              041   pblaze_6.psm
   update_pos                 043   pblaze_6.psm
 * update_pos_1               043   pblaze_6.psm
   update_pos_2               049   pblaze_6.psm
   update_pos_3               04F   pblaze_6.psm
   update_pos_4               055   pblaze_6.psm
   update_end                 05A   pblaze_6.psm
   inc_selected               05B   pblaze_6.psm
 * inc_selected_1             05B   pblaze_6.psm
   inc_selected_2             05F   pblaze_6.psm
   inc_selected_3             063   pblaze_6.psm
   inc_selected_4             067   pblaze_6.psm
 * inc_end                    06A   pblaze_6.psm
   dec_selected               06D   pblaze_6.psm
 * dec_selected_1             06D   pblaze_6.psm
   dec_selected_2             071   pblaze_6.psm
   dec_selected_3             075   pblaze_6.psm
   dec_selected_4             079   pblaze_6.psm
 * dec_end                    07C   pblaze_6.psm
   left_shift                 07F   pblaze_6.psm
   left_shift_end             083   pblaze_6.psm
   right_shift                085   pblaze_6.psm
   right_shift_end            088   pblaze_6.psm
   blink_selected             08A   pblaze_6.psm
   blink_on                   08D   pblaze_6.psm
   blink_end                  091   pblaze_6.psm
   has_button_changed         095   pblaze_6.psm
   is_button_presed           097   pblaze_6.psm
   is_button_released         099   pblaze_6.psm
 * test_edit                  09B   pblaze_6.psm
   get_digit                  09D   pblaze_6.psm
 * get_digit_blink            0A1   pblaze_6.psm
   get_digit_next             0A2   pblaze_6.psm
   tablica                    0A6   pblaze_6.psm
   delay                      0B7   pblaze_6.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             27
 STAR              -

 AND               8
 OR                2
 XOR               3

 ADD               7
 ADDCY             1
 SUB               5
 SUBCY             -

 TEST             21
 TESTCY            -
 COMPARE           4
 COMPARECY         -

 SL0               1
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               1
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             1
 OUTPUT            5
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            -
 RETURNI           -

 JUMP             43
 JUMP@             -
 CALL             26
 CALL@             1
 RETURN           13
 LOAD&RETURN      17

 HWBUILD           -



End of KCPSM6 log file.
