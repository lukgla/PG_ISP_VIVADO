KCPSM6 Assembler log file for program 'C:\Users\lukgla\Desktop\Vivado\pico\pblaze_6.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 07 Apr 2024
Assembly timestamp: 22:27:28

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 0AB hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 172
Memory locations available: 3924


Assembly listing

 Addr Code                             Instruction

 000                                   ;
 000                                   ; PiÄty program na Picoblaze
 000                                   ;
 000                                   TABLE 7_segment_decode#, [3F,06,5B,4F,66,6D,7D,07,7F,6F,FF]
 000                                   CONSTANT 7seg_el1_port, 00000001'b
 000                                   CONSTANT 7seg_el2_port, 00000010'b
 000                                   CONSTANT 7seg_el3_port, 00000100'b
 000                                   CONSTANT 7seg_el4_port, 00001000'b
 000                                   CONSTANT state_is_editing, 10000000'b
 000                                   ; -- port is equal to which one is edited right now
 000                                   CONSTANT button_up, 00000010'b
 000                                   CONSTANT button_down, 00000001'b
 000                                   CONSTANT button_edit, 00001000'b
 000                                   CONSTANT button_left, 00001000'b
 000                                   CONSTANT button_right, 00000100'b
 000                                   NAMEREG sE, buttons
 000                                   NAMEREG sF, buttons_old
 000                                   NAMEREG sC, state
 000                                   ; -- internal representation of the number
 000                                   NAMEREG sA, port1
 000                                   NAMEREG sB, port2
 000                                   NAMEREG s9, port3
 000                                   NAMEREG s8, port4
 000                                   NAMEREG s7, selected_number
 000                                   NAMEREG s6, digit_number_7seg
 000                                   NAMEREG s5, button_dif
 000                                   NAMEREG s4, button_up_counter
 000                                   NAMEREG s3, blink_counter
 000  01C01                            LOAD sC[state], 01[7seg_el1_port]
 001                            reset: 
 001                                   ; reset digit to 0000
 001  01700                            LOAD s7[selected_number], 00
 002  20098                            CALL 098[get_digit]                                         ; load 0
 003  2D60F                            OUTPUT s6[digit_number_7seg], 0F[00001111'b]
 004                        loop_main: 
 004  00FE0                            LOAD sF[buttons_old], sE[buttons]
 005                                   ; blink
 005  20086                            CALL 086[blink_selected]
 006                                   ; up clock if not zero with bound check
 006  1D400                            COMPARE s4[button_up_counter], 00
 007  3200B                            JUMP Z, 00B[scan_buttons]
 008  1D4FF                            COMPARE s4[button_up_counter], FF
 009  3200B                            JUMP Z, 00B[scan_buttons]
 00A  11401                            ADD s4[button_up_counter], 01
 00B                     scan_buttons: 
 00B  09E00                            INPUT sE[buttons], 00                                       ; read buttons
 00C  005E0                            LOAD s5[button_dif], sE[buttons]
 00D  065F0                            XOR s5[button_dif], sF[buttons_old]
 00E  32004                            JUMP Z, 004[loop_main]
 00F             handle_button_change: 
 00F  0DC80                            TEST sC[state], 80[state_is_editing]
 010  3201D                            JUMP Z, 01D[handle_button_up]
 011                      handle_left: 
 011  01108                            LOAD s1, 08[button_left]
 012  20090                            CALL 090[has_button_changed]
 013  32017                            JUMP Z, 017[handle_right]
 014  20092                            CALL 092[is_button_presed]
 015  32017                            JUMP Z, 017[handle_right]
 016  2007B                            CALL 07B[left_shift]
 017                     handle_right: 
 017  01104                            LOAD s1, 04[button_right]
 018  20090                            CALL 090[has_button_changed]
 019  3201D                            JUMP Z, 01D[handle_button_up]
 01A  20092                            CALL 092[is_button_presed]
 01B  3201D                            JUMP Z, 01D[handle_button_up]
 01C  20081                            CALL 081[right_shift]
 01D                 handle_button_up: 
 01D  01102                            LOAD s1, 02[button_up]
 01E  20090                            CALL 090[has_button_changed]
 01F  32031                            JUMP Z, 031[handle_button_down]
 020  20092                            CALL 092[is_button_presed]
 021  3A025                            JUMP C, 025[handle_button_up_pressed]
 022  20094                            CALL 094[is_button_released]
 023  3A025                            JUMP C, 025[handle_button_up_pressed]
 024  22031                            JUMP 031[handle_button_down]
 025         handle_button_up_pressed: 
 025  01401                            LOAD s4[button_up_counter], 01
 026  22031                            JUMP 031[handle_button_down]
 027                      up_released: 
 027  1D4FF                            COMPARE s4[button_up_counter], FF
 028  3202E                            JUMP Z, 02E[up_short]
 029                          up_long: 
 029  07C80                            XOR sC[state], 80[state_is_editing]
 02A  01400                            LOAD s4[button_up_counter], 00
 02B  000C0                            LOAD s0, sC[state]
 02C  2003F                            CALL 03F[update_pos]                                        ; reset to number blinking
 02D  22031                            JUMP 031[handle_button_down]
 02E                         up_short: 
 02E  20057                            CALL 057[inc_selected]
 02F  01400                            LOAD s4[button_up_counter], 00
 030  22031                            JUMP 031[handle_button_down]
 031               handle_button_down: 
 031  0DC80                            TEST sC[state], 80[state_is_editing]
 032  3A004                            JUMP C, 004[loop_main]
 033  01101                            LOAD s1, 01[button_down]
 034  20090                            CALL 090[has_button_changed]
 035  32004                            JUMP Z, 004[loop_main]
 036  20092                            CALL 092[is_button_presed]
 037  3A03B                            JUMP C, 03B[down_pressed]
 038  20094                            CALL 094[is_button_released]
 039  3A03D                            JUMP C, 03D[down_released]
 03A  22004                            JUMP 004[loop_main]
 03B                     down_pressed: 
 03B  20069                            CALL 069[dec_selected]
 03C  22031                            JUMP 031[handle_button_down]
 03D                    down_released: 
 03D  22031                            JUMP 031[handle_button_down]
 03E  22004                            JUMP 004[loop_main]
 03F                       update_pos: 
 03F                     update_pos_1: 
 03F  0D001                            TEST s0, 01
 040  32045                            JUMP Z, 045[update_pos_2]
 041  007A0                            LOAD s7[selected_number], sA[port1]
 042  20098                            CALL 098[get_digit]
 043  2D601                            OUTPUT s6[digit_number_7seg], 01[7seg_el1_port]
 044  22056                            JUMP 056[update_end]
 045                     update_pos_2: 
 045  0D002                            TEST s0, 02
 046  3204B                            JUMP Z, 04B[update_pos_3]
 047  007B0                            LOAD s7[selected_number], sB[port2]
 048  20098                            CALL 098[get_digit]
 049  2D602                            OUTPUT s6[digit_number_7seg], 02[7seg_el2_port]
 04A  22056                            JUMP 056[update_end]
 04B                     update_pos_3: 
 04B  0D004                            TEST s0, 04
 04C  32051                            JUMP Z, 051[update_pos_4]
 04D  00790                            LOAD s7[selected_number], s9[port3]
 04E  20098                            CALL 098[get_digit]
 04F  2D604                            OUTPUT s6[digit_number_7seg], 04[7seg_el3_port]
 050  22056                            JUMP 056[update_end]
 051                     update_pos_4: 
 051  0D008                            TEST s0, 08
 052  32056                            JUMP Z, 056[update_end]
 053  00780                            LOAD s7[selected_number], s8[port4]
 054  20098                            CALL 098[get_digit]
 055  2D608                            OUTPUT s6[digit_number_7seg], 08[7seg_el4_port]
 056                       update_end: 
 056  25000                            RETURN 
 057                     inc_selected: 
 057                   inc_selected_1: 
 057  0DC01                            TEST sC[state], 01[7seg_el1_port]
 058  3205B                            JUMP Z, 05B[inc_selected_2]
 059  11A01                            ADD sA[port1], 01
 05A  03A0F                            AND sA[port1], 0F
 05B                   inc_selected_2: 
 05B  0DC02                            TEST sC[state], 02[7seg_el2_port]
 05C  3205F                            JUMP Z, 05F[inc_selected_3]
 05D  11B01                            ADD sB[port2], 01
 05E  03B0F                            AND sB[port2], 0F
 05F                   inc_selected_3: 
 05F  0DC04                            TEST sC[state], 04[7seg_el3_port]
 060  32063                            JUMP Z, 063[inc_selected_4]
 061  11901                            ADD s9[port3], 01
 062  0390F                            AND s9[port3], 0F
 063                   inc_selected_4: 
 063  0DC08                            TEST sC[state], 08[7seg_el4_port]
 064  11801                            ADD s8[port4], 01
 065  0380F                            AND s8[port4], 0F
 066                          inc_end: 
 066  000C0                            LOAD s0, sC[state]
 067  2003F                            CALL 03F[update_pos]
 068  25000                            RETURN 
 069                     dec_selected: 
 069                   dec_selected_1: 
 069  0DC01                            TEST sC[state], 01[7seg_el1_port]
 06A  3206D                            JUMP Z, 06D[dec_selected_2]
 06B  19A01                            SUB sA[port1], 01
 06C  03A0F                            AND sA[port1], 0F
 06D                   dec_selected_2: 
 06D  0DC02                            TEST sC[state], 02[7seg_el2_port]
 06E  32071                            JUMP Z, 071[dec_selected_3]
 06F  19B01                            SUB sB[port2], 01
 070  03B0F                            AND sB[port2], 0F
 071                   dec_selected_3: 
 071  0DC04                            TEST sC[state], 04[7seg_el3_port]
 072  32075                            JUMP Z, 075[dec_selected_4]
 073  19901                            SUB s9[port3], 01
 074  0390F                            AND s9[port3], 0F
 075                   dec_selected_4: 
 075  0DC08                            TEST sC[state], 08[7seg_el4_port]
 076  19801                            SUB s8[port4], 01
 077  0380F                            AND s8[port4], 0F
 078                          dec_end: 
 078  000C0                            LOAD s0, sC[state]
 079  2003F                            CALL 03F[update_pos]
 07A  25000                            RETURN 
 07B                       left_shift: 
 07B  14C06                            SL0 sC[state]
 07C  0DC10                            TEST sC[state], 10[00010000'b]
 07D  3207F                            JUMP Z, 07F[left_shift_end]
 07E  01C01                            LOAD sC[state], 01[7seg_el1_port]
 07F                   left_shift_end: 
 07F  05C80                            OR sC[state], 80[state_is_editing]
 080  25000                            RETURN 
 081                      right_shift: 
 081  14C0E                            SR0 sC[state]
 082  3E084                            JUMP NC, 084[right_shift_end]
 083  05C08                            OR sC[state], 08[7seg_el4_port]
 084                  right_shift_end: 
 084  07CC0                            XOR sC[state], C0[11000000'b]
 085  25000                            RETURN 
 086                   blink_selected: 
 086  0DC80                            TEST sC[state], 80[state_is_editing]
 087  3A089                            JUMP C, 089[blink_on]
 088  25000                            RETURN 
 089                         blink_on: 
 089  0D310                            TEST s3[blink_counter], 10
 08A  3A08C                            JUMP C, 08C[blink_end]
 08B  01201                            LOAD s2, 01
 08C                        blink_end: 
 08C  000C0                            LOAD s0, sC[state]
 08D  2003F                            CALL 03F[update_pos]
 08E  01200                            LOAD s2, 00
 08F  25000                            RETURN 
 090               has_button_changed: 
 090  0C510                            TEST s5[button_dif], s1
 091  25000                            RETURN 
 092                 is_button_presed: 
 092  0CE10                            TEST sE[buttons], s1
 093  25000                            RETURN 
 094               is_button_released: 
 094  0CF10                            TEST sF[buttons_old], s1
 095  25000                            RETURN 
 096                        test_edit: 
 096  0DE08                            TEST sE[buttons], 08[00001000'b]                            ;
 097  25000                            RETURN 
 098                        get_digit: 
 098  01000                            LOAD s0, 00[tablica'upper]
 099  011A1                            LOAD s1, A1[tablica'lower]
 09A  1D200                            COMPARE s2, 00
 09B  3209D                            JUMP Z, 09D[get_digit_next]
 09C                  get_digit_blink: 
 09C  01710                            LOAD s7[selected_number], 10
 09D                   get_digit_next: 
 09D  10170                            ADD s1, s7[selected_number]
 09E  13000                            ADDCY s0, 00
 09F  24010                            CALL@ (s0, s1)
 0A0  25000                            RETURN 
 0A1                          tablica: 
 0A1  2163F                            LOAD&RETURN s6[digit_number_7seg], 3F[7_segment_decode#:3F]
 0A2  21606                            LOAD&RETURN s6[digit_number_7seg], 06[7_segment_decode#:06]
 0A3  2165B                            LOAD&RETURN s6[digit_number_7seg], 5B[7_segment_decode#:5B]
 0A4  2164F                            LOAD&RETURN s6[digit_number_7seg], 4F[7_segment_decode#:4F]
 0A5  21666                            LOAD&RETURN s6[digit_number_7seg], 66[7_segment_decode#:66]
 0A6  2166D                            LOAD&RETURN s6[digit_number_7seg], 6D[7_segment_decode#:6D]
 0A7  2167D                            LOAD&RETURN s6[digit_number_7seg], 7D[7_segment_decode#:7D]
 0A8  21607                            LOAD&RETURN s6[digit_number_7seg], 07[7_segment_decode#:07]
 0A9  2167F                            LOAD&RETURN s6[digit_number_7seg], 7F[7_segment_decode#:7F]
 0AA  2166F                            LOAD&RETURN s6[digit_number_7seg], 6F[7_segment_decode#:6F]
 0AB  216FF                            LOAD&RETURN s6[digit_number_7seg], FF[7_segment_decode#:FF]
 0AC                                   ;// ; procedura opĂłĹşniajÄca (opĂłĹşnienie w s4)
 0AC                                   ;// delay:
 0AC                                   ;//  LOAD se, s4
 0AC                                   ;// delay_1:
 0AC                                   ;//  LOAD sf, 00
 0AC                                   ;// delay_2:
 0AC                                   ;//  SUB sf, 01
 0AC                                   ;//  JUMP NZ, delay_2
 0AC                                   ;//  SUB se, 01
 0AC                                   ;//  JUMP NZ, delay_1
 0AC                                   ;//  RETURN


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\lukgla\Desktop\Vivado\pico\pblaze_6.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   22'd         
 timestamp_minutes 27'd         
 timestamp_seconds 28'd         
 datestamp_year    24'd         
 datestamp_month   4'd          
 datestamp_day     07'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 7seg_el1_port     00000001'b   pblaze_6.psm
 7seg_el2_port     00000010'b   pblaze_6.psm
 7seg_el3_port     00000100'b   pblaze_6.psm
 7seg_el4_port     00001000'b   pblaze_6.psm
 state_is_editing  10000000'b   pblaze_6.psm
 button_up         00000010'b   pblaze_6.psm
 button_down       00000001'b   pblaze_6.psm
 button_edit       00001000'b   pblaze_6.psm
 button_left       00001000'b   pblaze_6.psm
 button_right      00000100'b   pblaze_6.psm



List of defined tables

 TABLE name          Table                               Source PSM File

 7_segment_decode#   [3F,06,5B,4F,66,6D,7D,07,7F,6F,FF]  pblaze_6.psm



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "07 Apr 2024"  
 timestamp$        "22:27:28"     



List of line labels

   Label                      Addr  Source PSM File

 * reset                      001   pblaze_6.psm
   loop_main                  004   pblaze_6.psm
   scan_buttons               00B   pblaze_6.psm
 * handle_button_change       00F   pblaze_6.psm
 * handle_left                011   pblaze_6.psm
   handle_right               017   pblaze_6.psm
   handle_button_up           01D   pblaze_6.psm
   handle_button_up_pressed   025   pblaze_6.psm
 * up_released                027   pblaze_6.psm
 * up_long                    029   pblaze_6.psm
   up_short                   02E   pblaze_6.psm
   handle_button_down         031   pblaze_6.psm
   down_pressed               03B   pblaze_6.psm
   down_released              03D   pblaze_6.psm
   update_pos                 03F   pblaze_6.psm
 * update_pos_1               03F   pblaze_6.psm
   update_pos_2               045   pblaze_6.psm
   update_pos_3               04B   pblaze_6.psm
   update_pos_4               051   pblaze_6.psm
   update_end                 056   pblaze_6.psm
   inc_selected               057   pblaze_6.psm
 * inc_selected_1             057   pblaze_6.psm
   inc_selected_2             05B   pblaze_6.psm
   inc_selected_3             05F   pblaze_6.psm
   inc_selected_4             063   pblaze_6.psm
 * inc_end                    066   pblaze_6.psm
   dec_selected               069   pblaze_6.psm
 * dec_selected_1             069   pblaze_6.psm
   dec_selected_2             06D   pblaze_6.psm
   dec_selected_3             071   pblaze_6.psm
   dec_selected_4             075   pblaze_6.psm
 * dec_end                    078   pblaze_6.psm
   left_shift                 07B   pblaze_6.psm
   left_shift_end             07F   pblaze_6.psm
   right_shift                081   pblaze_6.psm
   right_shift_end            084   pblaze_6.psm
   blink_selected             086   pblaze_6.psm
   blink_on                   089   pblaze_6.psm
   blink_end                  08C   pblaze_6.psm
   has_button_changed         090   pblaze_6.psm
   is_button_presed           092   pblaze_6.psm
   is_button_released         094   pblaze_6.psm
 * test_edit                  096   pblaze_6.psm
   get_digit                  098   pblaze_6.psm
 * get_digit_blink            09C   pblaze_6.psm
   get_digit_next             09D   pblaze_6.psm
   tablica                    0A1   pblaze_6.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             25
 STAR              -

 AND               8
 OR                2
 XOR               3

 ADD               6
 ADDCY             1
 SUB               4
 SUBCY             -

 TEST             21
 TESTCY            -
 COMPARE           4
 COMPARECY         -

 SL0               1
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               1
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             1
 OUTPUT            5
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            -
 RETURNI           -

 JUMP             42
 JUMP@             -
 CALL             24
 CALL@             1
 RETURN           12
 LOAD&RETURN      11

 HWBUILD           -



End of KCPSM6 log file.
