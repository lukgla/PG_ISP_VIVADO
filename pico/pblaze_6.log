KCPSM6 Assembler log file for program 'C:\Users\lukgla\Desktop\Vivado\pico\pblaze_6.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 07 Apr 2024
Assembly timestamp: 01:42:21

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 09A hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 155
Memory locations available: 3941


Assembly listing

 Addr Code                             Instruction

 000                                   ;
 000                                   ; PiÄty program na Picoblaze
 000                                   ;
 000                                   TABLE 7_segment_decode#, [3F,06,5B,4F,66,6D,7D,07,7F,6F]
 000                                   CONSTANT 7seg_el1_port, 00000001'b
 000                                   CONSTANT 7seg_el2_port, 00000010'b
 000                                   CONSTANT 7seg_el3_port, 00000100'b
 000                                   CONSTANT 7seg_el4_port, 00001000'b
 000                                   CONSTANT state_is_editing, 10000000'b
 000                                   ; -- port is equal to which one is edited right now
 000                                   CONSTANT button_up, 00000010'b
 000                                   CONSTANT button_down, 00000001'b
 000                                   CONSTANT button_edit, 00001000'b
 000                                   CONSTANT button_left, 00001000'b
 000                                   CONSTANT button_right, 00000100'b
 000                                   NAMEREG sE, buttons
 000                                   NAMEREG sF, buttons_old
 000                                   NAMEREG sC, state
 000                                   ; -- internal representation of the number
 000                                   NAMEREG sA, port1
 000                                   NAMEREG sB, port2
 000                                   NAMEREG s9, port3
 000                                   NAMEREG s8, port4
 000                                   NAMEREG s7, selected_number
 000                                   NAMEREG s6, digit_number_7seg
 000                                   NAMEREG s5, button_dif
 000                                   NAMEREG s4, counter
 000  01C01                            LOAD sC[state], 01[7seg_el1_port]
 001                            reset: 
 001                                   ; reset digit to 0000
 001  01700                            LOAD s7[selected_number], 00
 002  2008B                            CALL 08B[get_digit]                                         ; load 0
 003  2D60F                            OUTPUT s6[digit_number_7seg], 0F[00001111'b]
 004                        loop_main: 
 004  00FE0                            LOAD sF[buttons_old], sE[buttons]
 005                                   ; up clock if not zero with bound check
 005  1D400                            COMPARE s4[counter], 00
 006  3200A                            JUMP Z, 00A[scan_buttons]
 007  1D4FF                            COMPARE s4[counter], FF
 008  3200A                            JUMP Z, 00A[scan_buttons]
 009  11401                            ADD s4[counter], 01
 00A                     scan_buttons: 
 00A  09E00                            INPUT sE[buttons], 00                                       ; read buttons
 00B  005E0                            LOAD s5[button_dif], sE[buttons]
 00C  065F0                            XOR s5[button_dif], sF[buttons_old]
 00D  32004                            JUMP Z, 004[loop_main]
 00E             handle_button_change: 
 00E  0DC80                            TEST sC[state], 80[state_is_editing]
 00F  3201C                            JUMP Z, 01C[handle_button_up]
 010                      handle_left: 
 010  01108                            LOAD s1, 08[button_left]
 011  20083                            CALL 083[has_button_changed]
 012  32016                            JUMP Z, 016[handle_right]
 013  20085                            CALL 085[is_button_presed]
 014  32016                            JUMP Z, 016[handle_right]
 015  20078                            CALL 078[left_shift]
 016                     handle_right: 
 016  01104                            LOAD s1, 04[button_right]
 017  20083                            CALL 083[has_button_changed]
 018  3201C                            JUMP Z, 01C[handle_button_up]
 019  20085                            CALL 085[is_button_presed]
 01A  3201C                            JUMP Z, 01C[handle_button_up]
 01B  2007E                            CALL 07E[right_shift]
 01C                 handle_button_up: 
 01C  01102                            LOAD s1, 02[button_up]
 01D  20083                            CALL 083[has_button_changed]
 01E  3202E                            JUMP Z, 02E[handle_button_down]
 01F  20085                            CALL 085[is_button_presed]
 020  3A024                            JUMP C, 024[handle_button_up_pressed]
 021  20087                            CALL 087[is_button_released]
 022  3A024                            JUMP C, 024[handle_button_up_pressed]
 023  2202E                            JUMP 02E[handle_button_down]
 024         handle_button_up_pressed: 
 024  01401                            LOAD s4[counter], 01
 025  2202E                            JUMP 02E[handle_button_down]
 026                      up_released: 
 026  1D4FF                            COMPARE s4[counter], FF
 027  3202B                            JUMP Z, 02B[up_short]
 028                          up_long: 
 028  07C80                            XOR sC[state], 80[state_is_editing]
 029  01400                            LOAD s4[counter], 00
 02A  2202E                            JUMP 02E[handle_button_down]
 02B                         up_short: 
 02B  20054                            CALL 054[inc_selected]
 02C  01400                            LOAD s4[counter], 00
 02D  2202E                            JUMP 02E[handle_button_down]
 02E               handle_button_down: 
 02E  0DC80                            TEST sC[state], 80[state_is_editing]
 02F  3A004                            JUMP C, 004[loop_main]
 030  01101                            LOAD s1, 01[button_down]
 031  20083                            CALL 083[has_button_changed]
 032  32004                            JUMP Z, 004[loop_main]
 033  20085                            CALL 085[is_button_presed]
 034  3A038                            JUMP C, 038[down_pressed]
 035  20087                            CALL 087[is_button_released]
 036  3A03A                            JUMP C, 03A[down_released]
 037  22004                            JUMP 004[loop_main]
 038                     down_pressed: 
 038  20066                            CALL 066[dec_selected]
 039  2202E                            JUMP 02E[handle_button_down]
 03A                    down_released: 
 03A  2202E                            JUMP 02E[handle_button_down]
 03B  22004                            JUMP 004[loop_main]
 03C                       update_pos: 
 03C                     update_pos_1: 
 03C  0D001                            TEST s0, 01
 03D  32042                            JUMP Z, 042[update_pos_2]
 03E  007A0                            LOAD s7[selected_number], sA[port1]
 03F  2008B                            CALL 08B[get_digit]
 040  2D601                            OUTPUT s6[digit_number_7seg], 01[7seg_el1_port]
 041  22053                            JUMP 053[update_end]
 042                     update_pos_2: 
 042  0D002                            TEST s0, 02
 043  32048                            JUMP Z, 048[update_pos_3]
 044  007B0                            LOAD s7[selected_number], sB[port2]
 045  2008B                            CALL 08B[get_digit]
 046  2D602                            OUTPUT s6[digit_number_7seg], 02[7seg_el2_port]
 047  22053                            JUMP 053[update_end]
 048                     update_pos_3: 
 048  0D004                            TEST s0, 04
 049  3204E                            JUMP Z, 04E[update_pos_4]
 04A  00790                            LOAD s7[selected_number], s9[port3]
 04B  2008B                            CALL 08B[get_digit]
 04C  2D604                            OUTPUT s6[digit_number_7seg], 04[7seg_el3_port]
 04D  22053                            JUMP 053[update_end]
 04E                     update_pos_4: 
 04E  0D008                            TEST s0, 08
 04F  32053                            JUMP Z, 053[update_end]
 050  00780                            LOAD s7[selected_number], s8[port4]
 051  2008B                            CALL 08B[get_digit]
 052  2D608                            OUTPUT s6[digit_number_7seg], 08[7seg_el4_port]
 053                       update_end: 
 053  25000                            RETURN 
 054                     inc_selected: 
 054                   inc_selected_1: 
 054  0DC01                            TEST sC[state], 01[7seg_el1_port]
 055  32058                            JUMP Z, 058[inc_selected_2]
 056  11A01                            ADD sA[port1], 01
 057  03A0F                            AND sA[port1], 0F
 058                   inc_selected_2: 
 058  0DC02                            TEST sC[state], 02[7seg_el2_port]
 059  3205C                            JUMP Z, 05C[inc_selected_3]
 05A  11B01                            ADD sB[port2], 01
 05B  03B0F                            AND sB[port2], 0F
 05C                   inc_selected_3: 
 05C  0DC04                            TEST sC[state], 04[7seg_el3_port]
 05D  32060                            JUMP Z, 060[inc_selected_4]
 05E  11901                            ADD s9[port3], 01
 05F  0390F                            AND s9[port3], 0F
 060                   inc_selected_4: 
 060  0DC08                            TEST sC[state], 08[7seg_el4_port]
 061  11801                            ADD s8[port4], 01
 062  0380F                            AND s8[port4], 0F
 063                          inc_end: 
 063  000C0                            LOAD s0, sC[state]
 064  2003C                            CALL 03C[update_pos]
 065  25000                            RETURN 
 066                     dec_selected: 
 066                   dec_selected_1: 
 066  0DC01                            TEST sC[state], 01[7seg_el1_port]
 067  3206A                            JUMP Z, 06A[dec_selected_2]
 068  19A01                            SUB sA[port1], 01
 069  03A0F                            AND sA[port1], 0F
 06A                   dec_selected_2: 
 06A  0DC02                            TEST sC[state], 02[7seg_el2_port]
 06B  3206E                            JUMP Z, 06E[dec_selected_3]
 06C  19B01                            SUB sB[port2], 01
 06D  03B0F                            AND sB[port2], 0F
 06E                   dec_selected_3: 
 06E  0DC04                            TEST sC[state], 04[7seg_el3_port]
 06F  32072                            JUMP Z, 072[dec_selected_4]
 070  19901                            SUB s9[port3], 01
 071  0390F                            AND s9[port3], 0F
 072                   dec_selected_4: 
 072  0DC08                            TEST sC[state], 08[7seg_el4_port]
 073  19801                            SUB s8[port4], 01
 074  0380F                            AND s8[port4], 0F
 075                          dec_end: 
 075  000C0                            LOAD s0, sC[state]
 076  2003C                            CALL 03C[update_pos]
 077  25000                            RETURN 
 078                       left_shift: 
 078  14C06                            SL0 sC[state]
 079  0DC10                            TEST sC[state], 10[00010000'b]
 07A  3207C                            JUMP Z, 07C[left_shift_end]
 07B  01C01                            LOAD sC[state], 01[7seg_el1_port]
 07C                   left_shift_end: 
 07C  05C80                            OR sC[state], 80[state_is_editing]
 07D  25000                            RETURN 
 07E                      right_shift: 
 07E  14C0E                            SR0 sC[state]
 07F  3E081                            JUMP NC, 081[right_shift_end]
 080  05C08                            OR sC[state], 08[7seg_el4_port]
 081                  right_shift_end: 
 081  07CC0                            XOR sC[state], C0[11000000'b]
 082  25000                            RETURN 
 083               has_button_changed: 
 083  0C510                            TEST s5[button_dif], s1
 084  25000                            RETURN 
 085                 is_button_presed: 
 085  0CE10                            TEST sE[buttons], s1
 086  25000                            RETURN 
 087               is_button_released: 
 087  0CF10                            TEST sF[buttons_old], s1
 088  25000                            RETURN 
 089                        test_edit: 
 089  0DE08                            TEST sE[buttons], 08[00001000'b]                            ;
 08A  25000                            RETURN 
 08B                        get_digit: 
 08B  01000                            LOAD s0, 00[tablica'upper]
 08C  01191                            LOAD s1, 91[tablica'lower]
 08D  10170                            ADD s1, s7[selected_number]
 08E  13000                            ADDCY s0, 00
 08F  24010                            CALL@ (s0, s1)
 090  25000                            RETURN 
 091                          tablica: 
 091  2163F                            LOAD&RETURN s6[digit_number_7seg], 3F[7_segment_decode#:3F]
 092  21606                            LOAD&RETURN s6[digit_number_7seg], 06[7_segment_decode#:06]
 093  2165B                            LOAD&RETURN s6[digit_number_7seg], 5B[7_segment_decode#:5B]
 094  2164F                            LOAD&RETURN s6[digit_number_7seg], 4F[7_segment_decode#:4F]
 095  21666                            LOAD&RETURN s6[digit_number_7seg], 66[7_segment_decode#:66]
 096  2166D                            LOAD&RETURN s6[digit_number_7seg], 6D[7_segment_decode#:6D]
 097  2167D                            LOAD&RETURN s6[digit_number_7seg], 7D[7_segment_decode#:7D]
 098  21607                            LOAD&RETURN s6[digit_number_7seg], 07[7_segment_decode#:07]
 099  2167F                            LOAD&RETURN s6[digit_number_7seg], 7F[7_segment_decode#:7F]
 09A  2166F                            LOAD&RETURN s6[digit_number_7seg], 6F[7_segment_decode#:6F]
 09B                                   ;// ; procedura opĂłĹşniajÄca (opĂłĹşnienie w s4)
 09B                                   ;// delay:
 09B                                   ;//  LOAD se, s4
 09B                                   ;// delay_1:
 09B                                   ;//  LOAD sf, 00
 09B                                   ;// delay_2:
 09B                                   ;//  SUB sf, 01
 09B                                   ;//  JUMP NZ, delay_2
 09B                                   ;//  SUB se, 01
 09B                                   ;//  JUMP NZ, delay_1
 09B                                   ;//  RETURN


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\lukgla\Desktop\Vivado\pico\pblaze_6.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   01'd         
 timestamp_minutes 42'd         
 timestamp_seconds 21'd         
 datestamp_year    24'd         
 datestamp_month   4'd          
 datestamp_day     07'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 7seg_el1_port     00000001'b   pblaze_6.psm
 7seg_el2_port     00000010'b   pblaze_6.psm
 7seg_el3_port     00000100'b   pblaze_6.psm
 7seg_el4_port     00001000'b   pblaze_6.psm
 state_is_editing  10000000'b   pblaze_6.psm
 button_up         00000010'b   pblaze_6.psm
 button_down       00000001'b   pblaze_6.psm
 button_edit       00001000'b   pblaze_6.psm
 button_left       00001000'b   pblaze_6.psm
 button_right      00000100'b   pblaze_6.psm



List of defined tables

 TABLE name          Table                            Source PSM File

 7_segment_decode#   [3F,06,5B,4F,66,6D,7D,07,7F,6F]  pblaze_6.psm



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "07 Apr 2024"  
 timestamp$        "01:42:21"     



List of line labels

   Label                      Addr  Source PSM File

 * reset                      001   pblaze_6.psm
   loop_main                  004   pblaze_6.psm
   scan_buttons               00A   pblaze_6.psm
 * handle_button_change       00E   pblaze_6.psm
 * handle_left                010   pblaze_6.psm
   handle_right               016   pblaze_6.psm
   handle_button_up           01C   pblaze_6.psm
   handle_button_up_pressed   024   pblaze_6.psm
 * up_released                026   pblaze_6.psm
 * up_long                    028   pblaze_6.psm
   up_short                   02B   pblaze_6.psm
   handle_button_down         02E   pblaze_6.psm
   down_pressed               038   pblaze_6.psm
   down_released              03A   pblaze_6.psm
   update_pos                 03C   pblaze_6.psm
 * update_pos_1               03C   pblaze_6.psm
   update_pos_2               042   pblaze_6.psm
   update_pos_3               048   pblaze_6.psm
   update_pos_4               04E   pblaze_6.psm
   update_end                 053   pblaze_6.psm
   inc_selected               054   pblaze_6.psm
 * inc_selected_1             054   pblaze_6.psm
   inc_selected_2             058   pblaze_6.psm
   inc_selected_3             05C   pblaze_6.psm
   inc_selected_4             060   pblaze_6.psm
 * inc_end                    063   pblaze_6.psm
   dec_selected               066   pblaze_6.psm
 * dec_selected_1             066   pblaze_6.psm
   dec_selected_2             06A   pblaze_6.psm
   dec_selected_3             06E   pblaze_6.psm
   dec_selected_4             072   pblaze_6.psm
 * dec_end                    075   pblaze_6.psm
   left_shift                 078   pblaze_6.psm
   left_shift_end             07C   pblaze_6.psm
   right_shift                07E   pblaze_6.psm
   right_shift_end            081   pblaze_6.psm
   has_button_changed         083   pblaze_6.psm
   is_button_presed           085   pblaze_6.psm
   is_button_released         087   pblaze_6.psm
 * test_edit                  089   pblaze_6.psm
   get_digit                  08B   pblaze_6.psm
   tablica                    091   pblaze_6.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             20
 STAR              -

 AND               8
 OR                2
 XOR               3

 ADD               6
 ADDCY             1
 SUB               4
 SUBCY             -

 TEST             19
 TESTCY            -
 COMPARE           3
 COMPARECY         -

 SL0               1
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               1
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             1
 OUTPUT            5
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            -
 RETURNI           -

 JUMP             39
 JUMP@             -
 CALL             21
 CALL@             1
 RETURN           10
 LOAD&RETURN      10

 HWBUILD           -



End of KCPSM6 log file.
